Index: app/src/main/res/layout/activity_admin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".AdminActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"Welcome, admin!\"\r\n        android:textSize=\"24sp\"\r\n        android:gravity=\"center\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_admin.xml b/app/src/main/res/layout/activity_admin.xml
--- a/app/src/main/res/layout/activity_admin.xml	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/res/layout/activity_admin.xml	(date 1743610041573)
@@ -5,7 +5,7 @@
     android:id="@+id/main"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".AdminActivity">
+    tools:context=".Activity.AdminActivity">
 
     <TextView
         android:layout_width="match_parent"
Index: app/src/main/java/com/example/expandmanagementsystem/ExpenseReportActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/ExpenseReportActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseReportActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/ExpenseReportActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseReportActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/ExpenseReportActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseReportActivity.java	(date 1743610110152)
@@ -1,4 +1,4 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 import android.os.Bundle;
 import android.widget.ArrayAdapter;
@@ -8,6 +8,9 @@
 import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 
Index: app/src/main/java/com/example/expandmanagementsystem/Adapter/BudgetAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/Adapter/BudgetAdapter.java b/app/src/main/java/com/example/expandmanagementsystem/Adapter/BudgetAdapter.java
new file mode 100644
--- /dev/null	(date 1743610163292)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Adapter/BudgetAdapter.java	(date 1743610163292)
@@ -0,0 +1,96 @@
+package com.example.expandmanagementsystem.Adapter;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.expandmanagementsystem.R;
+import com.example.expandmanagementsystem.model.Budget;
+
+import java.util.ArrayList;
+
+public class BudgetAdapter extends RecyclerView.Adapter<BudgetAdapter.ViewHolder> {
+
+    private ArrayList<Budget> budgets; // Danh sách các ngân sách
+    private double[] spentAmounts; // Mảng lưu số tiền đã chi tiêu cho từng ngân sách
+    private OnItemClickListener listener; // Listener để xử lý sự kiện chỉnh sửa/xóa
+
+    // Interface để xử lý sự kiện khi người dùng nhấn nút Edit hoặc Delete
+    public interface OnItemClickListener {
+        void onEditClick(Budget budget);
+        void onDeleteClick(Budget budget);
+    }
+
+    // Constructor: Khởi tạo adapter với danh sách ngân sách, số tiền đã chi, và listener
+    public BudgetAdapter(ArrayList<Budget> budgets, double[] spentAmounts, OnItemClickListener listener) {
+        this.budgets = budgets;
+        this.spentAmounts = spentAmounts;
+        this.listener = listener;
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        // Inflate layout cho từng mục ngân sách (item_budget.xml)
+        View view = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_budget, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
+        // Lấy dữ liệu ngân sách và số tiền đã chi tại vị trí hiện tại
+        Budget budget = budgets.get(position);
+        double spentAmount = spentAmounts[position];
+        // Tính số tiền còn lại: Ngân sách - Số tiền đã chi
+        double remainingAmount = budget.getAmount() - spentAmount;
+
+        // Hiển thị thông tin ngân sách lên các TextView
+        holder.categoryTextView.setText("Category: " + budget.getCategory());
+        holder.monthYearTextView.setText("Month/Year: " + budget.getMonth() + "/" + budget.getYear());
+        holder.budgetAmountTextView.setText(String.format("Budget: $%.2f", budget.getAmount()));
+        holder.spentAmountTextView.setText(String.format("Spent: $%.2f", spentAmount));
+        holder.remainingAmountTextView.setText(String.format("Remaining: $%.2f", remainingAmount));
+
+        // Đổi màu chữ "Remaining" nếu vượt ngân sách (âm)
+        if (remainingAmount < 0) {
+            holder.remainingAmountTextView.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.holo_red_dark));
+        } else {
+            holder.remainingAmountTextView.setTextColor(holder.itemView.getContext().getResources().getColor(android.R.color.black));
+        }
+
+        // Xử lý sự kiện khi nhấn nút Edit: Gọi listener để mở dialog chỉnh sửa
+        holder.editButton.setOnClickListener(v -> listener.onEditClick(budget));
+        // Xử lý sự kiện khi nhấn nút Delete: Gọi listener để xóa ngân sách
+        holder.deleteButton.setOnClickListener(v -> listener.onDeleteClick(budget));
+    }
+
+    @Override
+    public int getItemCount() {
+        // Trả về số lượng mục trong danh sách ngân sách
+        return budgets.size();
+    }
+
+    // ViewHolder: Lớp lưu trữ các view của một mục ngân sách
+    static class ViewHolder extends RecyclerView.ViewHolder {
+        TextView categoryTextView, monthYearTextView, budgetAmountTextView, spentAmountTextView, remainingAmountTextView;
+        Button editButton, deleteButton;
+
+        ViewHolder(View itemView) {
+            super(itemView);
+            // Khởi tạo các view từ layout item_budget.xml
+            categoryTextView = itemView.findViewById(R.id.categoryTextView);
+            monthYearTextView = itemView.findViewById(R.id.monthYearTextView);
+            budgetAmountTextView = itemView.findViewById(R.id.budgetAmountTextView);
+            spentAmountTextView = itemView.findViewById(R.id.spentAmountTextView);
+            remainingAmountTextView = itemView.findViewById(R.id.remainingAmountTextView);
+            editButton = itemView.findViewById(R.id.editButton);
+            deleteButton = itemView.findViewById(R.id.deleteButton);
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/expandmanagementsystem/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/MainActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/MainActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/MainActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/MainActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/MainActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/MainActivity.java	(date 1743610110125)
@@ -1,4 +1,4 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 import android.content.Intent;
 import android.os.Bundle;
@@ -10,6 +10,9 @@
 import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+
 public class MainActivity extends AppCompatActivity {
 
     private EditText etUsername, etPassword;
Index: app/src/main/java/com/example/expandmanagementsystem/AdminActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/AdminActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/AdminActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/AdminActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/AdminActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/AdminActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/AdminActivity.java	(date 1743610041528)
@@ -1,4 +1,4 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 import android.os.Bundle;
 
@@ -8,6 +8,8 @@
 import androidx.core.view.ViewCompat;
 import androidx.core.view.WindowInsetsCompat;
 
+import com.example.expandmanagementsystem.R;
+
 public class AdminActivity extends AppCompatActivity {
 
     @Override
Index: app/src/main/java/com/example/expandmanagementsystem/SetBudgetActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/SetBudgetActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/SetBudgetActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/SetBudgetActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/SetBudgetActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/SetBudgetActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/SetBudgetActivity.java	(date 1743610110197)
@@ -1,6 +1,4 @@
-package com.example.expandmanagementsystem;
-
-import static android.content.Intent.getIntent;
+package com.example.expandmanagementsystem.Activity;
 
 import android.os.Bundle;
 import android.widget.ArrayAdapter;
@@ -10,6 +8,9 @@
 import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+
 import java.util.ArrayList;
 
 public class SetBudgetActivity extends AppCompatActivity {
Index: app/src/main/java/com/example/expandmanagementsystem/StudentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/StudentActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/StudentActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/StudentActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/StudentActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/StudentActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/StudentActivity.java	(date 1743610110137)
@@ -1,7 +1,6 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 
-import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.AdapterView;
@@ -13,6 +12,9 @@
 import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+
 import java.util.ArrayList;
 
 public class StudentActivity extends AppCompatActivity {
Index: app/src/main/java/com/example/expandmanagementsystem/Expense.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/Expense.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/Expense.java
rename from app/src/main/java/com/example/expandmanagementsystem/Expense.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/Expense.java
--- a/app/src/main/java/com/example/expandmanagementsystem/Expense.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/Expense.java	(date 1743610110059)
@@ -1,4 +1,4 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 public class Expense {
     private int id;
Index: app/src/main/java/com/example/expandmanagementsystem/ExpenseOverviewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/ExpenseOverviewActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseOverviewActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/ExpenseOverviewActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseOverviewActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/ExpenseOverviewActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/ExpenseOverviewActivity.java	(date 1743610110230)
@@ -1,7 +1,6 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 import android.os.Bundle;
-import android.view.View;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.ListView;
@@ -10,6 +9,9 @@
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
+
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
 import com.github.mikephil.charting.charts.LineChart;
 import com.github.mikephil.charting.data.Entry;
 import com.github.mikephil.charting.data.LineData;
Index: app/src/main/java/com/example/expandmanagementsystem/Activity/RecurringExpensesActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/Activity/RecurringExpensesActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/RecurringExpensesActivity.java
new file mode 100644
--- /dev/null	(date 1743610110109)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/RecurringExpensesActivity.java	(date 1743610110109)
@@ -0,0 +1,232 @@
+package com.example.expandmanagementsystem.Activity;
+
+import android.app.AlertDialog;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+import android.content.Intent;
+
+import com.example.expandmanagementsystem.DataBase.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.expandmanagementsystem.Adapter.RecurringExpenseAdapter;
+import com.example.expandmanagementsystem.model.RecurringExpense;
+
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.Locale;
+
+public class RecurringExpensesActivity extends AppCompatActivity {
+
+    private DatabaseHelper dbHelper;
+    private int userId;
+    private RecyclerView recurringExpensesRecyclerView;
+    private RecurringExpenseAdapter adapter;
+    private ArrayList<RecurringExpense> recurringExpenses;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_recurring_expenses);
+
+        // Khởi tạo DatabaseHelper và lấy userId từ Intent
+        dbHelper = new DatabaseHelper(this);
+        userId = getIntent().getIntExtra("userId", -1);
+        if (userId == -1) {
+            Log.e("RecurringExpenses", "User ID not found in Intent");
+            Toast.makeText(this, "Không tìm thấy User ID. Vui lòng đăng nhập lại.", Toast.LENGTH_LONG).show();
+            finish();
+            return;
+        }
+
+        // Xử lý chi tiêu định kỳ khi activity khởi động
+        try {
+            // Gọi hàm processRecurringExpenses để tự động tạo các chi tiêu định kỳ dựa trên ngày hiện tại
+            dbHelper.processRecurringExpenses();
+        } catch (Exception e) {
+            // Ghi log và hiển thị thông báo nếu có lỗi khi xử lý chi tiêu định kỳ
+            Log.e("RecurringExpenses", "Error processing recurring expenses: " + e.getMessage());
+            Toast.makeText(this, "Lỗi khi xử lý chi tiêu định kỳ", Toast.LENGTH_SHORT).show();
+        }
+
+        // Xử lý sự kiện khi nhấn nút Back (FloatingActionButton)
+        FloatingActionButton backFab = findViewById(R.id.backFab);
+        backFab.setOnClickListener(v -> {
+            // Chuyển về MenuActivity và xóa các activity khác trong stack
+            Intent intent = new Intent(RecurringExpensesActivity.this, MenuActivity.class);
+            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+            startActivity(intent);
+            overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);
+            finish();
+        });
+
+        // Khởi tạo RecyclerView và nút thêm chi tiêu định kỳ
+        recurringExpensesRecyclerView = findViewById(R.id.recurringExpensesRecyclerView);
+        FloatingActionButton addRecurringExpenseButton = findViewById(R.id.addRecurringExpenseButton);
+
+        // Lấy danh sách chi tiêu định kỳ từ database và thiết lập adapter
+        recurringExpenses = dbHelper.getRecurringExpenses(userId);
+        adapter = new RecurringExpenseAdapter(recurringExpenses, new RecurringExpenseAdapter.OnItemClickListener() {
+            @Override
+            public void onEditClick(RecurringExpense expense) {
+                // Mở dialog để chỉnh sửa chi tiêu định kỳ
+                showAddEditDialog(expense);
+            }
+
+            @Override
+            public void onDeleteClick(RecurringExpense expense) {
+                // Hiển thị dialog xác nhận xóa chi tiêu định kỳ
+                new AlertDialog.Builder(RecurringExpensesActivity.this)
+                        .setTitle("Xóa Chi tiêu Định kỳ")
+                        .setMessage("Bạn có chắc muốn xóa chi tiêu định kỳ này? Tất cả chi tiêu liên quan cũng sẽ bị xóa.")
+                        .setPositiveButton("Có", (dialog, which) -> {
+                            // Xóa chi tiêu định kỳ và cập nhật danh sách
+                            dbHelper.deleteRecurringExpense(expense.getId());
+                            refreshList();
+                            Toast.makeText(RecurringExpensesActivity.this, "Đã xóa chi tiêu định kỳ", Toast.LENGTH_SHORT).show();
+                        })
+                        .setNegativeButton("Không", null)
+                        .show();
+            }
+        });
+
+        // Thiết lập RecyclerView với LinearLayoutManager và adapter
+        recurringExpensesRecyclerView.setLayoutManager(new LinearLayoutManager(this));
+        recurringExpensesRecyclerView.setAdapter(adapter);
+
+        // Xử lý sự kiện khi nhấn nút thêm chi tiêu định kỳ
+        addRecurringExpenseButton.setOnClickListener(v -> showAddEditDialog(null));
+    }
+
+    // Hiển thị dialog để thêm hoặc chỉnh sửa chi tiêu định kỳ
+    private void showAddEditDialog(RecurringExpense expense) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        View dialogView = LayoutInflater.from(this).inflate(R.layout.dialog_add_recurring_expense, null);
+        builder.setView(dialogView);
+
+        // Khởi tạo các view trong dialog
+        EditText descriptionEditText = dialogView.findViewById(R.id.descriptionEditText);
+        EditText amountEditText = dialogView.findViewById(R.id.amountEditText);
+        EditText categoryEditText = dialogView.findViewById(R.id.categoryEditText);
+        EditText startDateEditText = dialogView.findViewById(R.id.startDateEditText);
+        EditText endDateEditText = dialogView.findViewById(R.id.endDateEditText);
+        EditText frequencyEditText = dialogView.findViewById(R.id.frequencyEditText);
+        Button saveButton = dialogView.findViewById(R.id.saveButton);
+        Button cancelButton = dialogView.findViewById(R.id.cancelButton);
+        TextView dialogTitle = dialogView.findViewById(R.id.dialogTitle);
+
+        // Kiểm tra xem là thêm mới hay chỉnh sửa
+        boolean isEdit = expense != null;
+        if (isEdit) {
+            // Nếu là chỉnh sửa, điền thông tin chi tiêu định kỳ vào các trường
+            dialogTitle.setText("Sửa Chi tiêu Định kỳ");
+            descriptionEditText.setText(expense.getDescription());
+            amountEditText.setText(String.valueOf(expense.getAmount()));
+            categoryEditText.setText(expense.getCategory());
+            startDateEditText.setText(expense.getStartDate());
+            endDateEditText.setText(expense.getEndDate());
+            frequencyEditText.setText(expense.getFrequency());
+        } else {
+            dialogTitle.setText("Thêm Chi tiêu Định kỳ");
+        }
+
+        AlertDialog dialog = builder.create();
+
+        // Xử lý sự kiện khi nhấn nút Save
+        saveButton.setOnClickListener(v -> {
+            // Lấy dữ liệu từ các trường nhập liệu
+            String description = descriptionEditText.getText().toString().trim();
+            String amountStr = amountEditText.getText().toString().trim();
+            String category = categoryEditText.getText().toString().trim();
+            String startDate = startDateEditText.getText().toString().trim();
+            String endDate = endDateEditText.getText().toString().trim();
+            String frequency = frequencyEditText.getText().toString().trim();
+
+            // Kiểm tra dữ liệu đầu vào
+            if (description.isEmpty() || amountStr.isEmpty() || category.isEmpty() || startDate.isEmpty() || endDate.isEmpty() || frequency.isEmpty()) {
+                Toast.makeText(this, "Vui lòng điền đầy đủ thông tin", Toast.LENGTH_SHORT).show();
+                return;
+            }
+
+            // Kiểm tra và chuyển đổi số tiền
+            double amount;
+            try {
+                amount = Double.parseDouble(amountStr);
+                if (amount <= 0) {
+                    Toast.makeText(this, "Số tiền phải lớn hơn 0", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+            } catch (NumberFormatException e) {
+                Toast.makeText(this, "Số tiền không hợp lệ", Toast.LENGTH_SHORT).show();
+                return;
+            }
+
+            // Kiểm tra định dạng và hợp lệ của ngày bắt đầu và ngày kết thúc
+            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
+            sdf.setLenient(false); // Không cho phép định dạng ngày linh hoạt
+            try {
+                Date start = sdf.parse(startDate);
+                Date end = sdf.parse(endDate);
+                if (start == null || end == null || start.after(end)) {
+                    // Kiểm tra nếu ngày bắt đầu sau ngày kết thúc
+                    Toast.makeText(this, "Khoảng ngày không hợp lệ", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+            } catch (Exception e) {
+                Toast.makeText(this, "Định dạng ngày không đúng (dùng YYYY-MM-DD)", Toast.LENGTH_SHORT).show();
+                return;
+            }
+
+            // Tạo đối tượng RecurringExpense mới
+            RecurringExpense newExpense = new RecurringExpense();
+            newExpense.setUserId(userId);
+            newExpense.setDescription(description);
+            newExpense.setAmount(amount);
+            newExpense.setCategory(category);
+            newExpense.setStartDate(startDate);
+            newExpense.setEndDate(endDate);
+            newExpense.setFrequency(frequency);
+
+            // Lưu vào database: cập nhật nếu là chỉnh sửa, thêm mới nếu không
+            if (isEdit) {
+                newExpense.setId(expense.getId());
+                dbHelper.updateRecurringExpense(newExpense);
+                Toast.makeText(this, "Đã cập nhật chi tiêu định kỳ", Toast.LENGTH_SHORT).show();
+            } else {
+                dbHelper.addRecurringExpense(newExpense);
+                Toast.makeText(this, "Đã thêm chi tiêu định kỳ", Toast.LENGTH_SHORT).show();
+            }
+
+            // Cập nhật danh sách và đóng dialog
+            refreshList();
+            dialog.dismiss();
+        });
+
+        // Xử lý sự kiện khi nhấn nút Cancel
+        cancelButton.setOnClickListener(v -> dialog.dismiss());
+
+        // Hiển thị dialog
+        dialog.show();
+    }
+
+    // Cập nhật danh sách chi tiêu định kỳ
+    private void refreshList() {
+        // Lấy lại danh sách chi tiêu định kỳ từ database
+        recurringExpenses = dbHelper.getRecurringExpenses(userId);
+        // Cập nhật dữ liệu cho adapter
+        adapter.updateData(recurringExpenses);
+        // Xử lý lại chi tiêu định kỳ để đảm bảo các chi tiêu được tạo tự động nếu cần
+        dbHelper.processRecurringExpenses();
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/expandmanagementsystem/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/LoginActivity.java b/app/src/main/java/com/example/expandmanagementsystem/Activity/LoginActivity.java
rename from app/src/main/java/com/example/expandmanagementsystem/LoginActivity.java
rename to app/src/main/java/com/example/expandmanagementsystem/Activity/LoginActivity.java
--- a/app/src/main/java/com/example/expandmanagementsystem/LoginActivity.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/Activity/LoginActivity.java	(date 1743610110093)
@@ -1,4 +1,4 @@
-package com.example.expandmanagementsystem;
+package com.example.expandmanagementsystem.Activity;
 
 import android.content.Intent;
 import android.database.Cursor;
@@ -11,6 +11,9 @@
 import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
+import com.example.expandmanagementsystem.DatabaseHelper;
+import com.example.expandmanagementsystem.R;
+
 public   class LoginActivity extends AppCompatActivity {
 
     private EditText etLoginUsername, etLoginPassword;
Index: app/src/main/res/layout/activity_recurring_expenses.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_recurring_expenses.xml b/app/src/main/res/layout/activity_recurring_expenses.xml
new file mode 100644
--- /dev/null	(date 1743609947090)
+++ b/app/src/main/res/layout/activity_recurring_expenses.xml	(date 1743609947090)
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="16dp"
+    android:background="#F5F5F5">
+
+    <!-- Tiêu đề -->
+    <TextView
+        android:id="@+id/titleTextView"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Recurring Expenses"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        android:textColor="#212121"
+        android:paddingBottom="16dp" />
+
+    <!-- RecyclerView -->
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recurringExpensesRecyclerView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_below="@id/titleTextView"
+        android:layout_above="@id/backFab"
+        android:layout_marginBottom="16dp" />
+
+    <!-- Nút Back (FloatingActionButton) -->
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/backFab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentBottom="true"
+        android:layout_marginBottom="16dp"
+        android:src="@android:drawable/ic_menu_revert"
+        android:contentDescription="Back to Menu"
+        android:backgroundTint="@android:color/holo_green_light"
+        android:tint="@android:color/white"
+        app:fabSize="normal"/>
+
+    <!-- Nút Add Recurring Expense (FloatingActionButton) -->
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/addRecurringExpenseButton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentBottom="true"
+        android:layout_marginBottom="16dp"
+        android:src="@android:drawable/ic_input_add"
+        app:backgroundTint="#D81B60"
+        app:tint="@android:color/white"
+        app:fabSize="normal"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/expandmanagementsystem/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expandmanagementsystem;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class DatabaseHelper extends SQLiteOpenHelper {\r\n\r\n    // Các hằng số public static để truy cập từ    các lớp khác\r\n    public static final String DATABASE_NAME = \"UserDB\";\r\n    public static final int DATABASE_VERSION = 1;\r\n    public static final String TABLE_USERS = \"users\";\r\n    public static final String COLUMN_ID = \"id\";\r\n    public static final String COLUMN_USERNAME = \"username\";\r\n    public static final String COLUMN_PASSWORD = \"password\";\r\n    public static final String COLUMN_ROLE = \"role\";\r\n\r\n    // Các hằng số cho bảng expenses\r\n    public static final String TABLE_EXPENSES = \"expenses\";\r\n    public static final String EXPENSE_ID = \"expense_id\";\r\n    public static final String EXPENSE_USER_ID = \"user_id\";\r\n    public static final String EXPENSE_DESCRIPTION = \"description\";\r\n    public static final String EXPENSE_AMOUNT = \"amount\";\r\n    public static final String EXPENSE_DATE = \"date\";\r\n    public static final String EXPENSE_CATEGORY = \"category\";\r\n\r\n    // Các hằng số cho bảng budgets\r\n    public static final String TABLE_BUDGETS = \"budgets\";\r\n    public static final String BUDGET_ID = \"budget_id\";\r\n    public static final String BUDGET_USER_ID = \"user_id\";\r\n    public static final String BUDGET_CATEGORY = \"category\";\r\n    public static final String BUDGET_MONTH = \"month\";\r\n    public static final String BUDGET_YEAR = \"year\";\r\n    public static final String BUDGET_AMOUNT = \"amount\";\r\n\r\n    public DatabaseHelper(Context context) {\r\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        String CREATE_USERS_TABLE = \"CREATE TABLE \" + TABLE_USERS + \"(\"\r\n                + COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\"\r\n                + COLUMN_USERNAME + \" TEXT,\"\r\n                + COLUMN_PASSWORD + \" TEXT,\"\r\n                + COLUMN_ROLE + \" TEXT\" + \")\";\r\n        db.execSQL(CREATE_USERS_TABLE);\r\n\r\n        String CREATE_EXPENSES_TABLE = \"CREATE TABLE \" + TABLE_EXPENSES + \"(\"\r\n                + EXPENSE_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\"\r\n                + EXPENSE_USER_ID + \" INTEGER,\"\r\n                + EXPENSE_DESCRIPTION + \" TEXT,\"\r\n                + EXPENSE_AMOUNT + \" REAL,\"\r\n                + EXPENSE_DATE + \" TEXT,\"\r\n                + EXPENSE_CATEGORY + \" TEXT,\"\r\n                + \"FOREIGN KEY(\" + EXPENSE_USER_ID + \") REFERENCES \" + TABLE_USERS + \"(\" + COLUMN_ID + \"))\";\r\n        db.execSQL(CREATE_EXPENSES_TABLE);\r\n\r\n        String CREATE_BUDGETS_TABLE = \"CREATE TABLE \" + TABLE_BUDGETS + \"(\"\r\n                + BUDGET_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\"\r\n                + BUDGET_USER_ID + \" INTEGER,\"\r\n                + BUDGET_CATEGORY + \" TEXT,\"\r\n                + BUDGET_MONTH + \" INTEGER,\"\r\n                + BUDGET_YEAR + \" INTEGER,\"\r\n                + BUDGET_AMOUNT + \" REAL,\"\r\n                + \"FOREIGN KEY(\" + BUDGET_USER_ID + \") REFERENCES \" + TABLE_USERS + \"(\" + COLUMN_ID + \"),\"\r\n                + \"UNIQUE(\" + BUDGET_USER_ID + \", \" + BUDGET_CATEGORY + \", \" + BUDGET_MONTH + \", \" + BUDGET_YEAR + \"))\";\r\n        db.execSQL(CREATE_BUDGETS_TABLE);\r\n\r\n        db.execSQL(\"CREATE INDEX idx_expenses_date ON \" + TABLE_EXPENSES + \"(\" + EXPENSE_DATE + \")\");\r\n        db.execSQL(\"CREATE INDEX idx_budgets_month_year ON \" + TABLE_BUDGETS + \"(\" + BUDGET_MONTH + \", \" + BUDGET_YEAR + \")\");\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_USERS);\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_EXPENSES);\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_BUDGETS);\r\n        onCreate(db);\r\n    }\r\n\r\n    // Thêm người dùng mới\r\n    public boolean addUser(String username, String password, String role) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_USERNAME, username);\r\n        values.put(COLUMN_PASSWORD, password);\r\n        values.put(COLUMN_ROLE, role);\r\n\r\n        long result = db.insert(TABLE_USERS, null, values);\r\n        db.close();\r\n        return result != -1;\r\n    }\r\n\r\n    // Kiểm tra xem username đã tồn tại chưa\r\n    public boolean checkUsername(String username) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.query(TABLE_USERS, new String[]{COLUMN_USERNAME},\r\n                COLUMN_USERNAME + \"=?\", new String[]{username},\r\n                null, null, null);\r\n        boolean exists = cursor.getCount() > 0;\r\n        cursor.close();\r\n        db.close();\r\n        return exists;\r\n    }\r\n\r\n    // Thêm chi tiêu mới\r\n    public boolean addExpense(int userId, String description, double amount, String date, String category) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(EXPENSE_USER_ID, userId);\r\n        values.put(EXPENSE_DESCRIPTION, description);\r\n        values.put(EXPENSE_AMOUNT, amount);\r\n        values.put(EXPENSE_DATE, date);\r\n        values.put(EXPENSE_CATEGORY, category);\r\n        long result = db.insert(TABLE_EXPENSES, null, values);\r\n        db.close();\r\n        return result != -1;\r\n    }\r\n\r\n    // Cập nhật chi tiêu\r\n    public boolean updateExpense(int expenseId, String description, double amount, String date, String category) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(EXPENSE_DESCRIPTION, description);\r\n        values.put(EXPENSE_AMOUNT, amount);\r\n        values.put(EXPENSE_DATE, date);\r\n        values.put(EXPENSE_CATEGORY, category);\r\n        int result = db.update(TABLE_EXPENSES, values, EXPENSE_ID + \"=?\", new String[]{String.valueOf(expenseId)});\r\n        db.close();\r\n        return result > 0;\r\n    }\r\n    // xóa chi tiêu\r\n    public boolean deleteExpense(int expenseId) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        int rowsAffected = db.delete(TABLE_EXPENSES, EXPENSE_ID + \" = ?\",\r\n                new String[]{String.valueOf(expenseId)});\r\n        db.close();\r\n        return rowsAffected > 0;\r\n    }\r\n\r\n    // Lấy danh sách chi tiêu theo userId\r\n    public ArrayList<Expense> getExpenses(int userId) {\r\n        ArrayList<Expense> expenseList = new ArrayList<>();\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.query(TABLE_EXPENSES, null,\r\n                EXPENSE_USER_ID + \"=?\", new String[]{String.valueOf(userId)},\r\n                null, null, null);\r\n\r\n        if (cursor.moveToFirst()) {\r\n            do {\r\n                int id = cursor.getInt(cursor.getColumnIndexOrThrow(EXPENSE_ID));\r\n                String description = cursor.getString(cursor.getColumnIndexOrThrow(EXPENSE_DESCRIPTION));\r\n                double amount = cursor.getDouble(cursor.getColumnIndexOrThrow(EXPENSE_AMOUNT));\r\n                String date = cursor.getString(cursor.getColumnIndexOrThrow(EXPENSE_DATE));\r\n                String category = cursor.getString(cursor.getColumnIndexOrThrow(EXPENSE_CATEGORY));\r\n                expenseList.add(new Expense(id, userId, description, amount, date, category));\r\n            } while (cursor.moveToNext());\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return expenseList;\r\n    }\r\n\r\n    // Lấy userId từ username\r\n    public int getUserId(String username) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.query(TABLE_USERS, new String[]{COLUMN_ID},\r\n                COLUMN_USERNAME + \"=?\", new String[]{username}, null, null, null);\r\n        if (cursor != null && cursor.moveToFirst()) {\r\n            int userId = cursor.getInt(cursor.getColumnIndexOrThrow(COLUMN_ID));\r\n            cursor.close();\r\n            db.close();\r\n            return userId;\r\n        }\r\n        if (cursor != null) cursor.close();\r\n        db.close();\r\n        return -1;\r\n    }\r\n\r\n    // Lấy danh sách danh mục duy nhất từ bảng expenses theo userId (Dùng trong Budget Setting, Expense Overview, Expense Reports)\r\n    public ArrayList<String> getCategories(int userId) {\r\n        ArrayList<String> categories = new ArrayList<>();\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(\"SELECT DISTINCT \" + EXPENSE_CATEGORY + \" FROM \" + TABLE_EXPENSES +\r\n                \" WHERE \" + EXPENSE_USER_ID + \" = ? AND \" + EXPENSE_CATEGORY + \" IS NOT NULL\", new String[]{String.valueOf(userId)});\r\n        if (cursor.moveToFirst()) {\r\n            do {\r\n                categories.add(cursor.getString(0));\r\n            } while (cursor.moveToNext());\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return categories;\r\n    }\r\n\r\n    // Thêm ngân sách (Dùng trong Budget Setting)\r\n    public void addBudget(int userId, String category, int month, int year, double amount) {\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n        ContentValues values = new ContentValues();\r\n        values.put(BUDGET_USER_ID, userId);\r\n        values.put(BUDGET_CATEGORY, category);\r\n        values.put(BUDGET_MONTH, month);\r\n        values.put(BUDGET_YEAR, year);\r\n        values.put(BUDGET_AMOUNT, amount);\r\n        Cursor cursor = db.rawQuery(\"SELECT \" + BUDGET_ID + \" FROM \" + TABLE_BUDGETS +\r\n                        \" WHERE \" + BUDGET_USER_ID + \" = ? AND \" + BUDGET_CATEGORY + \" = ? AND \" + BUDGET_MONTH + \" = ? AND \" + BUDGET_YEAR + \" = ?\",\r\n                new String[]{String.valueOf(userId), category, String.valueOf(month), String.valueOf(year)});\r\n        if (cursor.moveToFirst()) {\r\n            db.update(TABLE_BUDGETS, values,\r\n                    BUDGET_USER_ID + \" = ? AND \" + BUDGET_CATEGORY + \" = ? AND \" + BUDGET_MONTH + \" = ? AND \" + BUDGET_YEAR + \" = ?\",\r\n                    new String[]{String.valueOf(userId), category, String.valueOf(month), String.valueOf(year)});\r\n        } else {\r\n            db.insert(TABLE_BUDGETS, null, values);\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n    }\r\n\r\n    // Lấy ngân sách (Dùng trong Budget Setting và Expense Overview)\r\n    public double getBudget(int userId, String category, int month, int year) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(\"SELECT \" + BUDGET_AMOUNT + \" FROM \" + TABLE_BUDGETS +\r\n                        \" WHERE \" + BUDGET_USER_ID + \" = ? AND \" + BUDGET_CATEGORY + \" = ? AND \" + BUDGET_MONTH + \" = ? AND \" + BUDGET_YEAR + \" = ?\",\r\n                new String[]{String.valueOf(userId), category, String.valueOf(month), String.valueOf(year)});\r\n        if (cursor.moveToFirst()) {\r\n            double amount = cursor.getDouble(0);\r\n            cursor.close();\r\n            db.close();\r\n            return amount;\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return 0.0;\r\n    }\r\n\r\n    // Tính tổng chi tiêu theo danh mục và tháng (Dùng trong Expense Overview)\r\n    public double getTotalExpenseByCategory(int userId, String category, int month, int year) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(\"SELECT SUM(\" + EXPENSE_AMOUNT + \") FROM \" + TABLE_EXPENSES +\r\n                        \" WHERE \" + EXPENSE_USER_ID + \" = ? AND \" + EXPENSE_CATEGORY + \" = ? AND strftime('%m', \" + EXPENSE_DATE + \") = ? AND strftime('%Y', \" + EXPENSE_DATE + \") = ?\",\r\n                new String[]{String.valueOf(userId), category, String.format(\"%02d\", month), String.valueOf(year)});\r\n        if (cursor.moveToFirst()) {\r\n            double total = cursor.getDouble(0);\r\n            cursor.close();\r\n            db.close();\r\n            return total;\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return 0.0;\r\n    }\r\n\r\n    // Lấy tổng chi tiêu theo tháng (Dùng trong Expense Overview)\r\n    public double getTotalExpenseByMonth(int userId, int month, int year) {\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(\"SELECT SUM(\" + EXPENSE_AMOUNT + \") FROM \" + TABLE_EXPENSES +\r\n                        \" WHERE \" + EXPENSE_USER_ID + \" = ? AND strftime('%m', \" + EXPENSE_DATE + \") = ? AND strftime('%Y', \" + EXPENSE_DATE + \") = ?\",\r\n                new String[]{String.valueOf(userId), String.format(\"%02d\", month), String.valueOf(year)});\r\n        if (cursor.moveToFirst()) {\r\n            double total = cursor.getDouble(0);\r\n            cursor.close();\r\n            db.close();\r\n            return total;\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return 0.0;\r\n    }\r\n\r\n    // Lấy chi tiêu theo khoảng thời gian (Dùng trong Expense Reports)\r\n    public ArrayList<HashMap<String, String>> getExpensesByDateRange(int userId, String startDate, String endDate) {\r\n        ArrayList<HashMap<String, String>> expenses = new ArrayList<>();\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        Cursor cursor = db.rawQuery(\"SELECT \" + EXPENSE_ID + \", \" + EXPENSE_DESCRIPTION + \", \" + EXPENSE_AMOUNT + \", \" +\r\n                        EXPENSE_DATE + \", \" + EXPENSE_CATEGORY + \" FROM \" + TABLE_EXPENSES +\r\n                        \" WHERE \" + EXPENSE_USER_ID + \" = ? AND \" + EXPENSE_DATE + \" BETWEEN ? AND ?\",\r\n                new String[]{String.valueOf(userId), startDate, endDate});\r\n        if (cursor.moveToFirst()) {\r\n            do {\r\n                HashMap<String, String> expense = new HashMap<>();\r\n                expense.put(\"expense_id\", cursor.getString(0));\r\n                expense.put(\"description\", cursor.getString(1));\r\n                expense.put(\"amount\", cursor.getString(2));\r\n                expense.put(\"date\", cursor.getString(3));\r\n                expense.put(\"category\", cursor.getString(4));\r\n                expenses.add(expense);\r\n            } while (cursor.moveToNext());\r\n        }\r\n        cursor.close();\r\n        db.close();\r\n        return expenses;\r\n    }\r\n\r\n    // Lấy tổng chi tiêu theo tháng cho biểu đồ (Dùng trong Expense Overview)\r\n    public ArrayList<Double> getMonthlyExpenses(int userId, int year) {\r\n        ArrayList<Double> monthlyExpenses = new ArrayList<>();\r\n        SQLiteDatabase db = this.getReadableDatabase();\r\n        for (int month = 1; month <= 12; month++) {\r\n            Cursor cursor = db.rawQuery(\"SELECT SUM(\" + EXPENSE_AMOUNT + \") FROM \" + TABLE_EXPENSES +\r\n                            \" WHERE \" + EXPENSE_USER_ID + \" = ? AND strftime('%m', \" + EXPENSE_DATE + \") = ? AND strftime('%Y', \" + EXPENSE_DATE + \") = ?\",\r\n                    new String[]{String.valueOf(userId), String.format(\"%02d\", month), String.valueOf(year)});\r\n            if (cursor.moveToFirst()) {\r\n                monthlyExpenses.add(cursor.getDouble(0));\r\n            } else {\r\n                monthlyExpenses.add(0.0);\r\n            }\r\n            cursor.close();\r\n        }\r\n        db.close();\r\n        return monthlyExpenses;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expandmanagementsystem/DatabaseHelper.java b/app/src/main/java/com/example/expandmanagementsystem/DatabaseHelper.java
--- a/app/src/main/java/com/example/expandmanagementsystem/DatabaseHelper.java	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/java/com/example/expandmanagementsystem/DatabaseHelper.java	(date 1743610110169)
@@ -6,6 +6,8 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
+import com.example.expandmanagementsystem.Activity.Expense;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <!-- Quyền này không bắt buộc cho SQLite, có thể xóa nếu không cần -->\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.ExpandManagementSystem\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- MainActivity (đăng ký) -->\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"false\" /> <!-- AdminActivity -->\r\n        <activity\r\n            android:name=\".AdminActivity\"\r\n            android:exported=\"false\" /> <!-- StudentActivity -->\r\n        <activity\r\n            android:name=\".StudentActivity\"\r\n            android:exported=\"false\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 2dc32cb469e3530380d7df30b2ab93c841d62437)
+++ b/app/src/main/AndroidManifest.xml	(date 1743610110184)
@@ -15,9 +15,11 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.ExpandManagementSystem"
         tools:targetApi="31">
-
         <activity
-            android:name=".LoginActivity"
+            android:name=".Activity.RecurringExpensesActivity"
+            android:exported="false" />
+        <activity
+            android:name=".Activity.LoginActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -26,13 +28,13 @@
             </intent-filter>
         </activity> <!-- MainActivity (đăng ký) -->
         <activity
-            android:name=".MainActivity"
+            android:name=".Activity.MainActivity"
             android:exported="false" /> <!-- AdminActivity -->
         <activity
-            android:name=".AdminActivity"
+            android:name=".Activity.AdminActivity"
             android:exported="false" /> <!-- StudentActivity -->
         <activity
-            android:name=".StudentActivity"
+            android:name=".Activity.StudentActivity"
             android:exported="false" />
     </application>
 
